---

- name: VM networking | the 'gstack-lb' chain is created
  when: vm_networking_expected_state == 'present'
  become: true
  command: iptables --table nat --new-chain gstack-lb
  register: vm_networking_create_chain
  failed_when: vm_networking_create_chain.rc > 1
  changed_when: vm_networking_create_chain.rc == 0
  tags: [ vm-networking, vm-networking-gstack-lb ]

- name: VM networking | the 'gstack-lb' chain is deleted
  when: vm_networking_expected_state == 'absent'
  become: true
  command: iptables --table nat --delete-chain gstack-lb
  register: vm_networking_delete_chain
  failed_when: vm_networking_delete_chain.rc > 1
  changed_when: vm_networking_delete_chain.rc == 0
  tags: [ vm-networking, vm-networking-gstack-lb ]



- name: VM networking | ingress traffic from the Internet is flowed through the 'gstack-lb' chain
  become: yes
  iptables:
    table: nat
    chain: PREROUTING
    action: insert
    goto: gstack-lb
    comment: "have ingress traffic go through the 'gstack-lb' chain"
  tags: [ vm-networking, vm-networking-gstack-lb ]

- name: VM networking | egress traffic from localhost is flowed through the 'gstack-lb' chain
  become: yes
  iptables:
    table: nat
    chain: OUTPUT
    action: insert
    goto: gstack-lb
    comment: "have egress traffic from localhost go through the 'gstack-lb' chain"
  tags: [ vm-networking, vm-networking-gstack-lb ]

- name: VM networking | traffic to GBE deployments ports is DNAT-ed to destination
  become: yes
  iptables:
    table: nat
    chain: gstack-lb
    protocol: tcp
    destination: "{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
    destination_port: "{{ rule.ingress_port }}"
    jump: DNAT
    to_destination: "{{ garden_vm_ip }}"
    comment: "DNAT ingress {{ rule.name }} traffic to Garden VM"
  with_items:
    - name: Traefik HTTP
      ingress_port: 80
    - name: Traefik HTTPS
      ingress_port: 443
    - name: CF SSH
      ingress_port: 2222
  loop_control: { loop_var: rule }
  tags: [ vm-networking, vm-networking-gstack-lb ]

- name: VM networking | DNAT-ed egress traffic from private networks is SNAT-ed from LB
  become: yes
  iptables:
    table: nat
    action: insert
    chain: POSTROUTING
    protocol: tcp
    source: 192.168.0.0/16
    destination: "{{ garden_vm_ip }}"
    destination_port: "{{ rule.ingress_port }}"
    jump: SNAT
    to_source: "{{ vbox_host_ip }}"
    comment: "SNAT from LB the ingress {{ rule.name }} traffic from private networks to Garden VM"
  with_items:
    - name: Traefik HTTP
      ingress_port: 80
    - name: Traefik HTTPS
      ingress_port: 443
    - name: CF SSH
      ingress_port: 2222
  loop_control: { loop_var: rule }
  tags: [ vm-networking, vm-networking-gstack-lb ]


- name: VM networking | DNAT-ed traffic from private networks is SNAT-ed
# - name: VM networking | DNAT-ed traffic from private networks is masqueraded
  when: no
  become: yes
  iptables:
    action: insert
    table: nat
    chain: POSTROUTING
    out_interface: vboxnet+
    source: "{{ source }}"
    destination: "{{ garden_vm_ip }}"
    # jump: MASQUERADE
    # comment: "MASQUERADE the DNAT-ed traffic originating from private net {{ source }}"
    jump: SNAT
    to_source: "{{ vbox_host_ip }}"
    comment: "SNAT the DNAT-ed traffic from private net {{ source }}"
  with_items:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  loop_control: { loop_var: source }
  tags: [ vm-networking, vm-networking-postrouting ]


- name: VM networking | normal traffic to private networks is accepted
  become: yes
  iptables:
    action: insert
    table: nat
    chain: POSTROUTING
    out_interface: vboxnet+
    source: "{{ source }}"
    jump: ACCEPT
    comment: "ACCEPT normal traffic to vboxnets"
  with_items:
    - "{{ vbox_host_ip }}"
    - "!192.168.0.0/16"
  loop_control: { loop_var: source }
  tags: [ vm-networking, vm-networking-gstack-lb ]

- name: VM networking | egress traffic from any private networks is masqueraded
  become: yes
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: "{{ hostvars[inventory_hostname].ansible_default_ipv4.alias }}"
    source: "{{ source }}"
    jump: MASQUERADE
    comment: "Masquerade egress traffic from private net {{ source }}"
  with_items:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  loop_control: { loop_var: source }
  tags: [ vm-networking, vm-networking-postrouting ]








- name: VM networking | the 'interface.d' directory is enabled
  become: yes
  lineinfile:
    dest: /etc/network/interfaces
    insertafter: EOF
    line: source-directory interfaces.d
    state: present
  tags: [ vm-networking ]

- name: VM networking | persistent routes are added
  become: yes
  lineinfile:
    dest: /etc/network/interfaces.d/{{ route.filename }}
    insertafter: EOF
    line: up route add -net {{ route.network }} gw {{ route.gateway }} dev {{ route.interface }}
    create: yes
    state: present
  with_items:
    - desc: Gstack Bosh Environment VM
      filename: gbe-vm
      network: "{{ garden_cidr }}"
      gateway: "{{ garden_vm_ip }}"
      interface: vboxnet0
  loop_control: { loop_var: route }
  tags: [ vm-networking ]

- name: VM networking | IP forwarding is enabled
  become: yes
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
  tags: [ vm-networking ]





- name: VM networking | the 'iptables-persistent' package is installed
  become: yes
  apt:
    package: iptables-persistent
    state: present
  tags: [ vm-networking, vm-networking-persist ]

- name: VM networking | iptables are persisted
  become: yes
  shell: iptables-save > /etc/iptables/rules.v4
  tags: [ vm-networking, vm-networking-persist ]

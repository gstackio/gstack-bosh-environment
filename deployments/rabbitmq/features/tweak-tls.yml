---

# RabbitMQ service broker tweaks

# WARN: this option is incorrectly documented in the job spec documentation of
# the cf-rabbitmq-multitenant-broker-release. You actually need to put here
# the TLS certificate of the RabbitMQ servers (and not 'true' or 'false' as
# documented).
- path: /instance_groups/name=rmq-broker/jobs/name=rabbitmq-broker/properties/rabbitmq-broker/rabbitmq/ssl?
  type: replace
  value: ((tls_certificate.certificate))



# RabbitMQ smoke tests tweaks

# This must be set to true because the 'rabbitmq-server.ssl.enabled' option,
# when set to 'true' will have the RabbitMQ cluster not accept non-TLS
# connections.
- path: /instance_groups/name=rmq-broker/jobs/name=smoke-tests/properties/tls_support?
  type: replace
  value: true



# TLS versions tweaks

- path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/ssl?/versions
  type: replace
  value: ((tls_versions))

- path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/ssl?/ciphers
  type: replace
  # You can inspect the actual ciphers used with this command, to be run on a
  # deployed RabbitMQ node:
  #
  # /var/vcap/packages/rabbitmq-server/bin/rabbitmqctl eval 'ssl:cipher_suites(openssl).'
  #
  # Her we have excluded all cyphers using the no more recommended SHA1 hash
  # algorithm.
  value:
    - ECDHE-ECDSA-AES256-GCM-SHA384
    - ECDHE-RSA-AES256-GCM-SHA384
    - ECDHE-ECDSA-AES256-SHA384
    - ECDHE-RSA-AES256-SHA384
    - ECDH-ECDSA-AES256-GCM-SHA384
    - ECDH-RSA-AES256-GCM-SHA384
    - ECDH-ECDSA-AES256-SHA384
    - ECDH-RSA-AES256-SHA384
    - DHE-RSA-AES256-GCM-SHA384
    - DHE-DSS-AES256-GCM-SHA384
    - DHE-RSA-AES256-SHA256
    - DHE-DSS-AES256-SHA256
    - AES256-GCM-SHA384
    - AES256-SHA256
    - ECDHE-ECDSA-AES128-GCM-SHA256
    - ECDHE-RSA-AES128-GCM-SHA256
    - ECDHE-ECDSA-AES128-SHA256
    - ECDHE-RSA-AES128-SHA256
    - ECDH-ECDSA-AES128-GCM-SHA256
    - ECDH-RSA-AES128-GCM-SHA256
    - ECDH-ECDSA-AES128-SHA256
    - ECDH-RSA-AES128-SHA256
    - DHE-RSA-AES128-GCM-SHA256
    - DHE-DSS-AES128-GCM-SHA256
    - DHE-RSA-AES128-SHA256
    - DHE-DSS-AES128-SHA256
    - AES128-GCM-SHA256
    - AES128-SHA256
    # - ECDHE-ECDSA-AES256-SHA
    # - ECDHE-RSA-AES256-SHA
    # - DHE-RSA-AES256-SHA
    # - DHE-DSS-AES256-SHA
    # - ECDH-ECDSA-AES256-SHA
    # - ECDH-RSA-AES256-SHA
    # - AES256-SHA
    # - ECDHE-ECDSA-AES128-SHA
    # - ECDHE-RSA-AES128-SHA
    # - DHE-RSA-AES128-SHA
    # - DHE-DSS-AES128-SHA
    # - ECDH-ECDSA-AES128-SHA
    # - ECDH-RSA-AES128-SHA
    # - AES128-SHA
    # - ECDHE-ECDSA-DES-CBC3-SHA
    # - ECDHE-RSA-DES-CBC3-SHA
    # - EDH-RSA-DES-CBC3-SHA
    # - EDH-DSS-DES-CBC3-SHA
    # - ECDH-ECDSA-DES-CBC3-SHA
    # - ECDH-RSA-DES-CBC3-SHA
    # - DES-CBC3-SHA



# Certificates tweaks

- path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/ssl?/cacert
  type: replace
  value: ((tls_certificate.ca))


- path: /variables/name=tls_certificate/options/ca
  type: replace
  value: rabbitmq_ca

- path: /variables/name=tls_certificate/options/common_name
  type: replace
  value: ((rabbitmq-management-hostname)).((system-domain))

- path: /variables/name=tls_certificate/options/alternative_names
  type: replace
  value:
    - ((rabbitmq-broker-hostname)).((system-domain))
    - rabbitmq.easyfoundry.internal
    - "*.rmq.((network_name)).((deployment_name)).bosh"
    - "*.haproxy.((network_name)).((deployment_name)).bosh"


- path: /variables/name=tls_certificate:before
  type: replace
  value:
    name: rabbitmq_ca
    type: certificate
    options:
      is_ca: true
      common_name: rabbitmq_ca



# Exposed ports

- path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/ports
  type: replace
  value:
    # - 5672  # not used anymore (maybe AMQP TCP listener)
    - 5671  # TLS (SSL) listener
    - 1883  # MQTT TCP listener
    - 8883  # MQTT TLS listener
    - 61613 # STOMP TCP listener
    - 61614 # STOMP TLS listener
    - 15671 # Management plugin: HTTPS listener
    - 15672 # Management plugin: HTTP (non-TLS) listener
    # - 15674 # not used anymore



# Management UI TLS (not working yet)

# - path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/management_tls?/enabled
#   type: replace
#   value: true

# - path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/management_tls?/cacert
#   type: replace
#   value: ((tls_certificate.ca))

# - path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/management_tls?/cert
#   type: replace
#   value: ((tls_certificate.certificate))

# - path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/management_tls?/key
#   type: replace
#   value: ((tls_certificate.private_key))



# Client certificate authentication

- path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/config?
  type: replace
  # NOTE: the base64 value below sets the 'EXTERNAL' authentication to allow
  # client cert auth, and configure client cert auth to obtain the login from
  # the Common Name (CN) field of the client cert.
  #
  # [
  #   {rabbit, [
  #     {auth_mechanisms, ['PLAIN', 'AMQPLAIN', 'EXTERNAL']},
  #     {ssl_cert_login_from, common_name}
  #   ]}
  # ].
  value: WwogIHtyYWJiaXQsIFsKICAgIHthdXRoX21lY2hhbmlzbXMsIFsnUExBSU4nLCAnQU1RUExBSU4nLCAnRVhURVJOQUwnXX0sCiAgICB7c3NsX2NlcnRfbG9naW5fZnJvbSwgY29tbW9uX25hbWV9CiAgXX0KXS4K

# - path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/ssl/verify?
#   type: replace
#   value: true

# - path: /instance_groups/name=rmq/jobs/name=rabbitmq-server/properties/rabbitmq-server/ssl/fail_if_no_peer_cert?
#   type: replace
#   value: true

#!/usr/bin/env bash

set -eo pipefail

function main() {
    setup

    local concourse_target=${1:-"ef"}

    local pipeline_name=self-sanity-tests

    set -x

    if [[ ! -e ${BASE_DIR}/bin/fly ]]; then
        bash ${DEBUG:+"-x"} "${SUBSYS_DIR}/fetch-fly-cli"
    fi
    "${BASE_DIR}/bin/fly" -t "${concourse_target}" sync

    set +e
    if ! fly -t "${concourse_target}" status; then
        bash ${DEBUG:+"-x"} "${SUBSYS_DIR}/fly-login" "${concourse_target}"
    fi
    set -e

    fly -t "${concourse_target}" set-pipeline -n -p "${pipeline_name}" -c <(pipeline_definition)

    fly -t "${concourse_target}" unpause-pipeline -p "${pipeline_name}"

    fly -t "${concourse_target}" trigger-job -j "${pipeline_name}/test-job" -w

    fly -t "${concourse_target}" destroy-pipeline -n -p "${pipeline_name}" > /dev/null

    exit 0
}

function setup() {
    SUBSYS_DIR=${SUBSYS_DIR:-$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)}
    BASE_DIR=${BASE_DIR:-$(git rev-parse --show-toplevel)}
    readonly SUBSYS_DIR BASE_DIR
}

function pipeline_definition() {
    cat <<EOF
---
resources:
  - name: test-resource
    type: time
    source:
      interval: 1m

  - name: test-image
    type: docker-image
    source:
      repository: ubuntu

jobs:
  - name: test-job
    plan:
      - get: test-resource
      - get: test-image
      - task: test-task
        image: test-image
        config:
          platform: linux

          run:
            path: bash
            args: [ "-ec", "echo 'Concourse rocks!'" ]
EOF
}

main "$@"

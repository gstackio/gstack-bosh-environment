#!/usr/bin/env bash

DNS_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)
BASE_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)

source "$BASE_DIR/lib/gbe/colors.inc.bash"
source "$BASE_DIR/lib/gbe/common.inc.bash"


# Render the zone config template
mkdir -p "$(state_dir dns)"
external_ip=$(gbe ip)
dns_zone=$(bosh int "$BASE_DIR/base-env/conf/global-config.yml" --path /dns_zone)
dns_subdomain=$(bosh int "$BASE_DIR/base-env/conf/global-config.yml" --path /dns_subdomain)
sed -e "s/EXTERNAL_IP/$external_ip/g; s/DNS_ZONE/$dns_zone/g; s/DNS_SUBDOMAIN/$dns_subdomain/g;" \
    "$DNS_DIR/conf/zone-config-template.js" > "$(state_dir dns)/zone-config.js"


dnscontrol preview \
    --creds "$DNS_DIR/conf/creds.json" \
    --config "$(state_dir dns)/zone-config.js"
status=$?

if [ "$status" -eq 0 ]; then
    echo -e "\nIf the above is correct for you," \
        "then you can run '${BLUE}${BOLD}push${RESET}' now.\n"
fi
exit $status

# Local Variables:
# indent-tabs-mode: nil
# End:

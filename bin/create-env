#!/usr/bin/env bash

source "$BASE_DIR/lib/gbe/infra.inc.bash"
source "$BASE_DIR/lib/gbe/colors.inc.bash"

set -e

assert_terraform_version
assert_bbl_version


echo -e "\n${BLUE}Fetching ${BOLD}upstream base deployment manifests$RESET\n"

fetch_ubdms


echo -e "\n${BLUE}Running ${BOLD}bbl up$RESET to create infrastructure for the BOSH environment\n"

bbl_invoke up \
    --gcp-region "$(infra_var /region)" \
    --gcp-zone "$(infra_var /zone)" \
    --gcp-service-account-key "$BASE_DIR/base-env/conf/gcp-service-account.key.json" \
    --gcp-project-id "$(infra_var /project_id)" \
    --iaas gcp \
    --no-director

# Ensure restricted permissions for state files containing sensitive
# informations. Please not that 'bbl-state.json' must not be created before
# invoking `bbl up`.
restrict_permissions \
    "$BASE_DIR/state/base-env/bbl-state.json" \
    "$BASE_DIR/state/base-env/depl-creds.yml"

infra_bosh_ro_invoke interpolate > "$BASE_DIR/state/base-env/depl-manifest.yml"


echo -e "\n${BLUE}Running ${BOLD}bosh create-env$RESET to create the BOSH environment\n"

gbe tunnel stop > /dev/null

# Proxy must not interfere when (re)creating the Bosh environment
old_BOSH_ALL_PROXY=$BOSH_ALL_PROXY
unset BOSH_ALL_PROXY

infra_bosh_rw_invoke create-env

# Restore any previous proxy setup, now that Bosh env is (re)created
if [ -n "$old_BOSH_ALL_PROXY" ]; then
    export BOSH_ALL_PROXY=$old_BOSH_ALL_PROXY
    unset old_BOSH_ALL_PROXY
fi

if [ -f ~/.ssh/known_hosts ]; then
    ssh-keygen -f ~/.ssh/known_hosts -R "$(gbe ip)"
fi
ssh-keyscan -t ecdsa "$(gbe ip)" 2> /dev/null \
    > ~/.ssh/known_hosts
gbe tunnel
alias-env
